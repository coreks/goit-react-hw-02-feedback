{"version":3,"sources":["components/Feedback/Statistics/Statistics.module.css","components/Feedback/Notification/Notification.module.css","components/Feedback/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Section/Section.module.css","components/Feedback/Notification/Notification.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Notification","message","className","css","notification","Statistics","good","neutral","bad","total","positivePercentage","statistics","title","text","FeedbackOptions","options","onLeaveFeedback","map","element","type","name","onClick","button","Section","children","Feedback","state","handleClickIncrement","e","keyName","target","setState","prevState","countTotalFeedback","this","toFixed","Object","keys","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,2B,sBCAvGD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,oJCMXC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKC,UAAWC,IAAIC,aAApB,SAAmCH,K,gBCmB7BI,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKR,UAAWC,IAAIQ,WAApB,UACE,oBAAIT,UAAWC,IAAIS,MAAnB,uBACCH,EACC,qCACE,oBAAGP,UAAWC,IAAIU,KAAlB,mBAA+BP,KAC/B,oBAAGJ,UAAWC,IAAIU,KAAlB,sBAAkCN,KAClC,oBAAGL,UAAWC,IAAIU,KAAlB,kBAA8BL,KAC9B,oBAAGN,UAAWC,IAAIU,KAAlB,oBAAgCJ,KAChC,oBAAGP,UAAWC,IAAIU,KAAlB,gCAA4CH,EAA5C,UAGF,cAAC,EAAD,CAAcT,QAAQ,0B,gBCIfa,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SAELC,KAAMF,EACNG,QAASL,EACTd,UAAWC,IAAImB,OALjB,SAOGJ,GALIA,S,iBCGAK,EATC,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACxB,OACE,oCACGZ,GAAS,oBAAIV,UAAWC,IAAIS,MAAnB,SAA2BA,IACpCY,MC6CQC,E,4MA9CbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,qBAAuB,SAACC,GACtB,IAAMC,EAAUD,EAAEE,OAAOV,KAEzB,EAAKW,UAAS,SAACC,GAAD,sBACXH,EAAUG,EAAUH,GAAW,O,EAIpCI,mBAAqB,WACnB,MAA+B,EAAKP,MAEpC,OAFA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,qEAKzB,WAGE,OAFiB0B,KAAKR,MAAdpB,KAEQ4B,KAAKD,qBAAwB,KAAKE,QAAQ,K,oBAG5D,WACE,OACE,eAAC,EAAD,CAASvB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEG,QAASqB,OAAOC,KAAKH,KAAKR,OAC1BV,gBAAiBkB,KAAKP,uBAGxB,cAAC,EAAD,CACErB,KAAM4B,KAAKR,MAAMpB,KACjBC,QAAS2B,KAAKR,MAAMnB,QACpBC,IAAK0B,KAAKR,MAAMlB,IAChBC,MAAOyB,KAAKD,qBACZvB,mBAAoBwB,KAAKI,2C,GAxCZC,aCCRC,EAJH,WACV,OAAO,cAAC,EAAD,K,MCETC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ab6a31bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__14iH6\",\"title\":\"Statistics_title__1QCEG\",\"text\":\"Statistics_text__3cKCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1ir70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__D1RWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3c3L8\"};","import PropTypes from \"prop-types\";\r\nimport css from \"../Notification/Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div className={css.notification}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport css from \"../Statistics/Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={css.statistics}>\r\n      <h2 className={css.title}>Statisics</h2>\r\n      {total ? (\r\n        <>\r\n          <p className={css.text}>Good: {good}</p>\r\n          <p className={css.text}>Neutral: {neutral}</p>\r\n          <p className={css.text}>Bad: {bad}</p>\r\n          <p className={css.text}>Total: {total}</p>\r\n          <p className={css.text}>Positive feedback: {positivePercentage}%</p>\r\n        </>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../FeedbackOptions/FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map((element) => (\r\n        <button\r\n          type=\"button\"\r\n          key={element}\r\n          name={element}\r\n          onClick={onLeaveFeedback}\r\n          className={css.button}\r\n        >\r\n          {element}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../Section/Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      {title && <h1 className={css.title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { Component } from \"react\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./Section/Section\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleClickIncrement = (e) => {\r\n    const keyName = e.target.name;\r\n\r\n    this.setState((prevState) => ({\r\n      [keyName]: prevState[keyName] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good } = this.state;\r\n\r\n    return ((good / this.countTotalFeedback()) * 100).toFixed(0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={Object.keys(this.state)}\r\n          onLeaveFeedback={this.handleClickIncrement}\r\n        />\r\n\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.countTotalFeedback()}\r\n          positivePercentage={this.countPositiveFeedbackPercentage()}\r\n        />\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import Feedback from \"./components/Feedback/Feedback.jsx\";\n\nconst App = () => {\n  return <Feedback />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}